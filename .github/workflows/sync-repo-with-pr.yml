name: Cross-Repo Sync and PR

on:
  workflow_call:
    inputs:
      source-repo:
        description: "The full name (org/repo) of the source repository to sync from"
        required: false
        type: string
        default: "None"
      source-branch:
        description: "The branch name in the source repository to sync from"
        required: false
        type: string
        default: "main"
      destination-repo:
        description: "The full name (org/repo) of the destination repository to sync to"
        required: false
        type: string
        default: "None"
      destination-branch:
        description: "The branch name in the destination repository to sync to"
        required: false
        type: string
        default: "main"
      sync-operation:
        description: "The type of sync operation to perform (pull request or force push)"
        required: false
        type: string
        default: "pull_request"

jobs:
  sync-pr:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO_SYNC_GITHUB_APP_ID: ${{ secrets.REPO_SYNC_GITHUB_APP_ID }}
      REPO_SYNC_GITHUB_APP_PRIVATE_KEY: ${{ secrets.REPO_SYNC_GITHUB_APP_PRIVATE_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0

      - name: Generate Repo Sync Workflow Token
        id: repo-sync-generate-token
        uses: actions/create-github-app-token@6c406e8a244fdf6bbf79e6cc8a91504a48d2c2ce
        with:
          app-id: ${{ env.REPO_SYNC_GITHUB_APP_ID }}
          private-key: ${{ env.REPO_SYNC_GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.destination-repo }}
          ref: ${{ inputs.destination-branch }}
          token: ${{ steps.repo-sync-generate-token.outputs.token }}

      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.source-repo }}
          ref: ${{ inputs.source-branch }}
          token: ${{ steps.repo-sync-generate-token.outputs.token }}
          path: source-repo

      - name: Set up git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create temp branch in destination repo
        run: |
          TEMP_BRANCH=sync-$(date +%s)
          git checkout -b $TEMP_BRANCH
          echo "TEMP_BRANCH=$TEMP_BRANCH" >> $GITHUB_ENV

      - name: Sync files from source to destination
        run: |
          rsync -a --delete --exclude='.git' source-repo/ .
          git add .
          git commit -m "Sync from ${{ inputs.source-repo }}@${{ inputs.source-branch }} as a single commit" --allow-empty

      - name: Push temp branch
        run: |
          git push origin ${{ env.TEMP_BRANCH }}

      - name: Create Pull Request using GitHub CLI
        env:
          GH_TOKEN: ${{ steps.repo-sync-generate-token.outputs.token }}
        run: |
          gh pr create \
          --repo ${{ inputs.destination-repo }} \
          --head ${{ env.TEMP_BRANCH }} \
          --base ${{ inputs.destination-branch }} \
          --title "Synchronize changes" \
          --body "This pull request synchronizes changes from the source repository."

      # - name: Commit and Raise a PR
      #   id: commit-and-raise-pr
      #   uses: GitSenku/MonoMakima/actions@main
      #   with:
      #       source-repo: ${{ inputs.source-repo }}
      #       source-branch: ${{ inputs.source-branch }}
      #       destination-repo: ${{ inputs.destination-repo }}
      #       destination-branch: ${{ inputs.destination-branch }}
      #       sync-operation: "pull_request"
      #       github-token: ${{ steps.repo-sync-generate-token.outputs.token }}

      # - name: Checkout source repo
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ${{ inputs.source-repo }}
      #     ref: ${{ inputs.source-branch }}
      #     path: source
      #     token: ${{ steps.repo-sync-generate-token.outputs.token }}

      # - name: Checkout destination repo
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ${{ inputs.destination-repo }}
      #     ref: ${{ inputs.destination-branch }}
      #     path: destination
      #     token: ${{ steps.repo-sync-generate-token.outputs.token }}

      # - name: Copy changes to temp branch
      #   run: |
      #     cd destination
      #     git config user.name "github-actions[bot]"
      #     git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      #     TEMP_BRANCH="${{ inputs.destination-branch }}_temp"
      #     git checkout -b "$TEMP_BRANCH"

      #     # Sync changes from source
      #     rsync -av --delete --exclude='.git' source/ ./

      #     git add .
      #     git commit -m "Sync changes from ${{ inputs.source-repo }}:${{ inputs.source-branch }}"
      #     git push origin "$TEMP_BRANCH"

      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     token: ${{ steps.repo-sync-generate-token.outputs.token }}
      #     commit-message: "Sync from ${{ inputs.source-repo }}:${{ inputs.source-branch }}"
      #     branch: ${{ inputs.destination-branch }}_temp
      #     base: ${{ inputs.destination-branch }}
      #     title: "Sync from ${{ inputs.source-repo }}:${{ inputs.source-branch }}"
      #     body: |
      #       This pull request was created automatically to sync the snapshot from `${{ inputs.source-repo }}:${{ inputs.source-branch }}` into `${{ inputs.destination-branch }}`.
